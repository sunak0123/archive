# -*- coding: utf-8 -*-
"""real ~ing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FizgNg3LW2vxcvIqD0MhS9p6fyaNBeoK

한글 폰트 설치
"""

!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

import matplotlib.pyplot as plt

plt.rc('font', family='NanumBarunGothic')
plt.rc('axes', unicode_minus=False)

"""구글 드라이브 접속"""

from google.colab import drive
drive.mount('/content/gdrive')

import os

print("before : %s"%os.getcwd())
os.chdir("/content/gdrive/My Drive/화재 위험 분석 데이터")
print("after : %s"%os.getcwd())

"""기초 라이브러리 불러오기"""

!pip install pyproj
import pandas as pd
import numpy as np
import folium
import pyproj

from IPython.display import set_matplotlib_formats
set_matplotlib_formats('retina')

"""Load DataSet"""

# csv file read
df = pd.read_csv('2022년 대전광역시 건물화재위험지수 및 등급.csv')

# file 잘 읽어졌는지 확인
df.head()

"""데이터 전처리"""

# 결측치 확인
print(df.info())

# x, y 축에 존재하는 데이터를 제외한 나머지 결측치 제거
df = df.dropna(subset = ['X_AXIS', 'Y_AXIS'])

df.index = range(len(df))
print(df.info())
df.tail()

df.columns

data_columns = ['GRID', 'LAR_CNT', 'MFCRTR_CNT', 'WSRT_CNT', 'GRAD', 'X_AXIS', 'Y_AXIS']
data = df[data_columns]
data.head()

# 소수점 두자리까지만 보기
pd.set_option('display.float_format','{:.2f}'.format)

"""epsg:5178 좌표계에서 epsg:4326 좌표계로 변환"""

def project_array(coord, p1_type, p2_type):
  p1 = pyproj.Proj(init = p1_type)
  p2 = pyproj.Proj(init = p2_type)
  fx, fy = pyproj.transform(p1, p2, coord[: , 0], coord[ : , 1])

  return np.dstack([fx, fy])[0]

data_columns = ['X_AXIS', 'Y_AXIS']
data_grid = data[data_columns]

coord = np.array(data_grid)
coord

p1_type = 'epsg:5178'
p2_type = 'epsg:4326'

result = project_array(coord, p1_type, p2_type)
result

data['경도'] = result[: , 0]
data['위도'] = result[: , 1]

data.tail()

"""지도 위에 시각화하기"""

from folium.plugins import MarkerCluster


lat = data['위도'].mean()
lon = data['경도'].mean()


m = folium.Map([lat, lon], zoom_start = 11)

for i in data.index:
 sub_lat = data.loc[i, '위도']
 sub_lon = data.loc[i, '경도']
 popContent = (
     "등급 : " + str(data.loc[i, 'GRAD']) + '<br>' +
     "숙박 음식점 업종 수 : " + str(data.loc[i, 'LAR_CNT']) + '<br>' +
     "제조업 수 : " + str(data.loc[i, 'MFCRTR_CNT']) + '<br>' +
     "도소매 업종 수 : " + str(data.loc[i, 'WSRT_CNT']))
 iframe = folium.IFrame(popContent)
 popup1 = folium.Popup(iframe, min_width = 300, max_width = 500)

 #).format(data.loc[i, 'GRAD'], data.loc[i, 'LAR_CNT'], data.loc[i, 'MFCRTR_CNT'], data.loc[i, 'WSRT_CNT'])
# title = data.loc[i, 'GRAD']

 
 
 folium.Marker([sub_lat, sub_lon], popup = popup1).add_to(m)

m.save("test1.html")

m

lat = data['위도'].mean()
lon = data['경도'].mean()


m = folium.Map([lat, lon], zoom_start = 11)

for i in data.index:
 sub_lat = data.loc[i, '위도']
 sub_lon = data.loc[i, '경도']
 popContent = (
     "등급 : " + str(data.loc[i, 'GRAD']) + '<br>' +
     "숙박 음식점 업종 수 : " + str(data.loc[i, 'LAR_CNT']) + '<br>' +
     "제조업 수 : " + str(data.loc[i, 'MFCRTR_CNT']) + '<br>' +
     "도소매 업종 수 : " + str(data.loc[i, 'WSRT_CNT']))
 iframe = folium.IFrame(popContent)
 popup1 = folium.Popup(iframe, min_width = 300, max_width = 500)
 #).format(data.loc[i, 'GRAD'], data.loc[i, 'LAR_CNT'], data.loc[i, 'MFCRTR_CNT'], data.loc[i, 'WSRT_CNT'])
# title = data.loc[i, 'GRAD']

 folium.CircleMarker([sub_lat, sub_lon], popup = popup1, radius = 3).add_to(m)

m.save('건물화재위험지수.html')

m